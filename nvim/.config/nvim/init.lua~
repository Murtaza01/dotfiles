vim.cmd("set expandtab")
vim.cmd("set tabstop=2")
vim.cmd("set softtabstop=2")
vim.cmd("set shiftwidth=2")

local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.uv or vim.loop).fs_stat(lazypath) then
  local lazyrepo = "https://github.com/folke/lazy.nvim.git"
  local out = vim.fn.system({ "git", "clone", "--filter=blob:none", "--branch=stable", lazyrepo, lazypath })
  if vim.v.shell_error ~= 0 then
    vim.api.nvim_echo({
      { "Failed to clone lazy.nvim:\n", "ErrorMsg" },
      { out, "WarningMsg" },
      { "\nPress any key to exit..." },
    }, true, {})
    vim.fn.getchar()
    os.exit(1)
  end
end
vim.opt.rtp:prepend(lazypath)

local plugins = {
  { "loctvl842/monokai-pro.nvim", name = "monokai-pro", priority = 1000},
  {
    'nvim-telescope/telescope.nvim', tag = '0.1.8',
     dependencies = { 'nvim-lua/plenary.nvim' },
     {'nvim-treesitter/nvim-treesitter', build = ":TSUpdate"}
  }
}
local opts = {}

local configs = require("nvim-treesitter.configs")

configs.setup({
  ensure_installed = {"lua","javascript"},
   highlight = { enable = true },
   indent = { enable = true },  
})
require("lazy").setup(plugins,opts)
require("monokai-pro").setup({
filter = "machine"
})
local builtin = require("telescope.builtin")
vim.keymap.set('n','<C-p>',builtin.find_files,{})
vim.cmd.colorscheme "monokai-pro"

